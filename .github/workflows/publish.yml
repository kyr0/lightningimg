name: Pure Rust project build on Linux
on:
  push:
    branches:
      - main
  pull_request:

env:
  DEBUG: 'napi:*'
  MACOSX_DEPLOYMENT_TARGET: '10.13'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        targets:
          [
            'x86_64-apple-darwin',
            'aarch64-apple-darwin',
            'x86_64-pc-windows-msvc',
            'i686-pc-windows-msvc',
            'aarch64-pc-windows-msvc',
            'x86_64-unknown-linux-gnu',
            'aarch64-unknown-linux-gnu',
            'x86_64-unknown-linux-musl',
            'aarch64-unknown-linux-musl'
          ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ${{ github.workspace }}/.xwin
            ~/.napi-rs
            ./target
          key: ${{ matrix.targets }}-cargo-cache

      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.targets }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v3

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install ziglang
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.13.0

      - name: Install cargo toolchains
        uses: taiki-e/install-action@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tool: cargo-zigbuild,cargo-xwin

      - name: Install cargo-zigbuild
        run: cargo install cargo-zigbuild

      - name: Install Rust targets
        run: |
          rustup target add ${{ matrix.targets }}
          rustup show | grep ${{ matrix.targets }}

      - name: Install dependencies
        run: pnpm install

      - run: pnpm --filter ./lightningimg-nodejs run build --target ${{ matrix.targets }}
        env:
          XWIN_CACHE_DIR: ${{ github.workspace }}/.xwin

      - uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.targets }}
          path: lightningimg-nodejs/*.node
          if-no-files-found: error

  test-host:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - target: x86_64-apple-darwin
            host: macos-latest
          - target: aarch64-apple-darwin
            host: macos-latest
          - target: x86_64-pc-windows-msvc
            host: windows-latest
          - target: i686-pc-windows-msvc
            host: windows-latest
        node: ['18', '20']
    runs-on: ${{ matrix.settings.host }}
    needs:
      - build
    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v3

      - uses: actions/setup-node@v4
        if: matrix.settings.target != 'aarch64-apple-darwin'
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
          architecture: x64

      - uses: actions/setup-node@v4
        if: matrix.settings.target == 'aarch64-apple-darwin'
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
          architecture: arm64

      - name: Setup node x86
        if: matrix.settings.target == 'i686-pc-windows-msvc'
        run: yarn config set supportedArchitectures.cpu "ia32"
        shell: bash

      - name: Install dependencies
        run: pnpm install

      - name: Setup node x86
        uses: actions/setup-node@v4
        if: matrix.settings.target == 'i686-pc-windows-msvc'
        with:
          node-version: 20
          cache: pnpm
          architecture: x86

      - name: Download bindings
        uses: actions/download-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: lightningimg-nodejs/
      - name: Run tests
        run: pnpm --filter ./lightningimg-nodejs run test

  test-docker:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - target: x86_64-unknown-linux-gnu
            docker: node:18-slim
            args: ''
          - target: aarch64-unknown-linux-gnu
            docker: node:18-slim
            args: '--platform linux/arm64'
          - target: x86_64-unknown-linux-musl
            docker: node:18-alpine
            args: ''
          - target: aarch64-unknown-linux-musl
            docker: node:18-alpine
            args: '--platform linux/arm64'
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - name: Setup PNPM
        uses: pnpm/action-setup@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Download bindings
        uses: actions/download-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: lightningimg-nodejs/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,arm
      - run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Run tests
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ matrix.settings.docker }}
          options: ${{ matrix.settings.args }} -v ${{ github.workspace }}:/build -w /build
          run: |
            set -e
            pnpm --filter ./lightningimg-nodejs test